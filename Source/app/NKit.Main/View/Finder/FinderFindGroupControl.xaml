<!--
  上位から DataContext を設定して使用。
-->
<UserControl
  x:Class="ContentTypeTextNet.NKit.Main.View.Finder.FinderFindGroupControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:prism="http://prismlibrary.com/"

  xmlns:app_utility_view_converter="clr-namespace:ContentTypeTextNet.NKit.Utility.View.Converter;assembly=NKit.Utility"

  xmlns:app_main_define="clr-namespace:ContentTypeTextNet.NKit.Main.Define"
  xmlns:app_main_view_converter="clr-namespace:ContentTypeTextNet.NKit.Main.View.Converter"
  xmlns:app_main_view_control="clr-namespace:ContentTypeTextNet.NKit.Main.View.Control"
  xmlns:app_main_view_finder="clr-namespace:ContentTypeTextNet.NKit.Main.View.Finder"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="450"
  d:DesignWidth="800"
>
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <app_utility_view_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    <app_utility_view_converter:NotNullToBooleanConverter x:Key="NotNullToBooleanConverter" />
    <app_utility_view_converter:BinaryToTextConverter x:Key="BinaryToTextConverter" />
    <app_utility_view_converter:HumanLikeByteConverter x:Key="HumanLikeByteConverterSize" SizeFormat="{}{0:###0}" />
    <app_utility_view_converter:HumanLikeByteConverter x:Key="HumanLikeByteConverterUnit" SizeFormat="{}{1}" />
    <app_utility_view_converter:HumanLikeByteConverter x:Key="HumanLikeByteConverter" />
    <app_utility_view_converter:DoubleToParameterPercentConverter x:Key="DoubleToParameterPercentConverter" />
    <app_utility_view_converter:DoubleToPercentConverter x:Key="DoubleToPercentConverter" />
    <app_main_view_converter:FilePathToIconConverter x:Key="FilePathToIconConverter" />

    <Style x:Key="MatchFilePanel" TargetType="StackPanel">
      <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <Style x:Key="MatchFile_Base" TargetType="Border">
      <Style.Triggers>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Background" Value="Gray"/>
        </Trigger>
      </Style.Triggers>
      <Setter Property="Width" Value="3" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Background" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="MatchFile_Name" TargetType="Border" BasedOn="{StaticResource MatchFile_Base}">
      <Setter Property="Background" Value="Red" />
    </Style>
    <Style x:Key="MatchFile_Size" TargetType="Border" BasedOn="{StaticResource MatchFile_Base}">
      <Setter Property="Background" Value="Lime" />
    </Style>
    <Style x:Key="MatchFile_Property" TargetType="Border" BasedOn="{StaticResource MatchFile_Base}">
      <Setter Property="Background" Value="Yellow" />
    </Style>
    <Style x:Key="MatchFile_Content" TargetType="Border" BasedOn="{StaticResource MatchFile_Base}">
      <Setter Property="Background" Value="Blue" />
    </Style>


  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="3*" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="7*" />
    </Grid.ColumnDefinitions>

    <Grid Grid.Column="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <ScrollViewer Grid.Row="0">
        <StackPanel>
          <Expander Header="グループ設定">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <Label Grid.Row="0" Grid.Column="0" Target="{Binding ElementName=inputGroupName}">グループ名(_G):</Label>
              <TextBox x:Name="inputGroupName" Grid.Row="0" Grid.Column="1" Text="{Binding GroupName, UpdateSourceTrigger=PropertyChanged}" />

              <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding SetDefaultSettingCommand}">現在設定を規定値にする</Button>
            </Grid>
          </Expander>

          <GroupBox Header="ディレクトリ">
            <StackPanel>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Command="{Binding UpRootDirectoryPathCommand}">
                  <Viewbox Style="{StaticResource Image-Small}" Child="{StaticResource Image_Arrow-Up}" />
                </Button>
                <TextBox Grid.Column="1" Text="{Binding RootDirectoryPath, UpdateSourceTrigger=PropertyChanged}" />
                <Button Grid.Column="2" Command="{Binding SelectRootDirectoryPathCommand}">
                  <Viewbox Style="{StaticResource Image-Small}" Child="{StaticResource Image_FolderOpen}" />
                </Button>
              </Grid>

              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">階層制限(_D):</Label>
                <Slider Grid.Row="1" Grid.Column="0" Minimum="0" Maximum="10" Value="{Binding DirectoryLimitLevel}" />
                <TextBlock Grid.Row="1" Grid.Column="1">
                  <TextBlock.Style>
                    <Style TargetType="TextBlock">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding DirectoryLimitLevel}" Value="0">
                          <Setter Property="Text" Value="無制限" />
                        </DataTrigger>
                      </Style.Triggers>
                      <Setter Property="Text" Value="{Binding DirectoryLimitLevel}" />
                    </Style>
                  </TextBlock.Style>
                </TextBlock>
              </Grid>

              <Separator Style="{StaticResource SmallPadding}" />

              <CheckBox ToolTip="ディレクトリのファイル属性で隠しファイルが有効なディレクトリ" IsChecked="{Binding FindHiddenDirectory}" Style="{StaticResource VerticalCheckBox}">属性による隠しディレクトリも検索する</CheckBox>
              <CheckBox ToolTip="ディレクトリ名の先頭が . のディレクトリ" IsChecked="{Binding FindDotDirectory}" Style="{StaticResource VerticalCheckBox}">名前による隠しディレクトリも検索する</CheckBox>
            </StackPanel>
          </GroupBox>

          <GroupBox Header="ファイル名">
            <StackPanel>
              <TextBox Text="{Binding FileNameSearchPattern, UpdateSourceTrigger=PropertyChanged}"/>
              <Separator Style="{StaticResource SmallPadding}" />

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0">一致条件:</Label>
                <app_main_view_control:SearchPatternSelectControl Grid.Column="1" SearchPatternKind="{Binding FileNameSearchPatternKind, Mode=TwoWay}" />
              </Grid>

              <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FileNameCase}">大文字小文字を区別する</CheckBox>
              <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FindDotFile}">属性による隠しファイルも検索する</CheckBox>
              <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FindFileNameOnly}">拡張子のないファイルも検索する</CheckBox>

            </StackPanel>
          </GroupBox>

          <GroupBox Header="検索ファイルサイズ上限">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <!-- 256 MB の選定に意味はない -->
              <Slider Grid.Column="0" Minimum="0" Maximum="268435456" Value="{Binding FileSizeLimitMaximum}"  />
              <TextBlock Grid.Column="1">
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding FileSizeLimitMaximum}" Value="0">
                        <Setter Property="Text" Value="無制限" />
                      </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Text" Value="{Binding FileSizeLimitMaximum, Converter={StaticResource HumanLikeByteConverter}}" />
                  </Style>
                </TextBlock.Style>
              </TextBlock>
            </Grid>
          </GroupBox>

          <Separator />

          <Expander IsExpanded="{Binding FindFileProperty}">
            <Expander.Header>
              <CheckBox IsChecked="{Binding FindFileProperty}">プロパティを検索条件に追加</CheckBox>
            </Expander.Header>
            <StackPanel>
              <GroupBox Header="属性">
                <StackPanel>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0">フラグ条件:</Label>
                    <app_main_view_control:FlagMatchSelectControl Grid.Column="1" FlagMatchKind="{Binding FilePropertyFileAttributeFlagMatchKind, Mode=TwoWay}" />
                  </Grid>

                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsArchive}">アーカイブ</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsCompressed}">圧縮</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsEncrypted}">暗号化</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsHidden}">隠しファイル</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsIntegrityStream}">データ整合性サポート</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsNoScrubData}">データ整合性除外</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsNotContentIndexed}">インデックス未作成</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsOffline}">オフライン</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsReadOnly}">読み込み専用</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsReparsePoint}">ユーザー定義データブロック</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsSparseFile}">スパースファイル</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsSystem}">システムファイル</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FilePropertyAttributeIsTemporary}">一時ファイル</CheckBox>
                </StackPanel>
              </GroupBox>
            </StackPanel>
          </Expander>

          <Separator />

          <Expander IsExpanded="{Binding FindFileContent}">
            <Expander.Header>
              <CheckBox IsChecked="{Binding FindFileContent}">内容を検索条件に追加</CheckBox>
            </Expander.Header>
            <StackPanel>
              <TextBox Text="{Binding FileContentSearchPattern}" />
              <Separator Style="{StaticResource SmallPadding}" />

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0">一致条件:</Label>
                <app_main_view_control:SearchPatternSelectControl SearchPatternKind="{Binding FileContentSearchPatternKind, Mode=TwoWay}"  Grid.Column="1"/>
              </Grid>

              <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding FileContentCase}">大文字小文字を区別する</CheckBox>
              <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding IsEnabledFileContentSizeLimit}">検索ファイルサイズ上限を守る</CheckBox>

              <GroupBox>
                <GroupBox.Header>
                  <CheckBox IsChecked="{Binding MicrosoftOfficeContentIsEnabled}">Microsoft Office</CheckBox>
                </GroupBox.Header>
                <StackPanel>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding MicrosoftOfficeContentSheetName}">シート名</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding MicrosoftOfficeContentPriorityFormula}">数式を優先</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding MicrosoftOfficeContentCommentInCell}" ToolTip="どんだけ頑張っても null なんですが！ あと xls 形式だとシェイプでコメント取れるってどういう事なんすか！">コメント(TODO)</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding MicrosoftOfficeContentTextInShape}">オートシェイプ</CheckBox>
                </StackPanel>
              </GroupBox>

              <GroupBox>
                <GroupBox.Header>
                  <CheckBox IsChecked="{Binding XmlHtmlContentIsEnabled}">XML/HTML</CheckBox>
                </GroupBox.Header>
                <StackPanel>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding XmlContentElement}">要素</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding XmlContentText}">テキスト要素</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding XmlContentAttributeKey}">属性名</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding XmlContentAttributeValue}">属性値</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding XmlContentComment}">コメント</CheckBox>
                  <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding XmlContentIgnoreHtmlLinkValue}">
                    <TextBlock TextDecorations="Strikethrough">IgnoreHtmlLinkValue</TextBlock>
                  </CheckBox>
                </StackPanel>
              </GroupBox>

            </StackPanel>
          </Expander>
        </StackPanel>
      </ScrollViewer>

      <!--<Button Grid.Row="1" Command="{Binding RunCommand}">find!</Button>-->
      <app_main_view_control:RunnableControl Grid.Row="1" RunnableItem="{Binding}" />
    </Grid>

    <Grid Grid.Column="2">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <ToolBar Grid.Row="0">
        <Label>フィルタ:</Label>
        <CheckBox IsChecked="{Binding IsEnabledHiddenFileFiler}">隠しファイル</CheckBox>
        <CheckBox IsChecked="{Binding IsEnabledFileNameFilter}">
          <StackPanel Style="{StaticResource MatchFilePanel}">
            <Border Style="{StaticResource MatchFile_Name}" />
            <AccessText>ファイル名</AccessText>
          </StackPanel>
        </CheckBox>
        <CheckBox IsChecked="{Binding IsEnabledFileSizeFilter}">
          <StackPanel Style="{StaticResource MatchFilePanel}">
            <Border Style="{StaticResource MatchFile_Size}" />
            <AccessText>サイズ</AccessText>
          </StackPanel>
        </CheckBox>
        <CheckBox IsChecked="{Binding IsEnabledFilePropertyFilter}">
          <StackPanel Style="{StaticResource MatchFilePanel}">
            <Border Style="{StaticResource MatchFile_Property}" />
            <AccessText>プロパティ</AccessText>
          </StackPanel>
        </CheckBox>
        <CheckBox IsChecked="{Binding IsEnabledFileContentFilter}">
          <StackPanel Style="{StaticResource MatchFilePanel}">
            <Border Style="{StaticResource MatchFile_Content}" />
            <AccessText>内容</AccessText>
          </StackPanel>
        </CheckBox>

        <Separator />

        <TextBlock VerticalAlignment="Center">
          <Run>表示数:</Run>
          <Run Text="{Binding Items.Count, Mode=OneWay}" />
          <Run>/</Run>
          <Run>検索一致:</Run>
          <Run Text="{Binding EnabledItemsCount, Mode=OneWay}" />
          <Run>/</Run>
          <Run>検索数:</Run>
          <Run Text="{Binding TotalItemsCount, Mode=OneWay}" />
        </TextBlock>

      </ToolBar>

      <Grid x:Name="fileListPanel" Grid.Row="1">
        <Grid.RowDefinitions>
          <RowDefinition Height="1*" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <ListView
          Grid.Row="0"
          ScrollViewer.CanContentScroll="True"
          VirtualizingPanel.ScrollUnit="Pixel"
          VirtualizingPanel.IsVirtualizing="True"
          VirtualizingPanel.VirtualizationMode="Standard"
          SelectionMode="Extended"
          ItemsSource="{Binding Items}"
          SelectedItem="{Binding SelectedItem}"
        >
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="SelectionChanged">
              <prism:InvokeCommandAction Command="{Binding FindItemsSelectionChangedCommand}" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseDoubleClick">
              <i:InvokeCommandAction Command="{Binding OpenSelectedFileCommand}" />
            </i:EventTrigger>
            <!-- TODO: シェルメニュー表示
            <i:EventTrigger EventName="MouseRightButtonUp">
              <i:InvokeCommandAction Command="{Binding OpenSelectedFilesContextMenuCommand}" />
            </i:EventTrigger>
            -->
          </i:Interaction.Triggers>
          <ListView.Style>
            <Style TargetType="ListView">
              <Style.Triggers>
                <DataTrigger Binding="{Binding ShowSelectedFileDetail}" Value="False">
                  <Setter Property="Grid.RowSpan" Value="3" />
                </DataTrigger>
              </Style.Triggers>
              <Setter Property="Grid.RowSpan" Value="1" />
            </Style>
          </ListView.Style>
          <ListView.ItemsPanel>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel Orientation="Vertical" />
            </ItemsPanelTemplate>
          </ListView.ItemsPanel>
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWay}" />
              <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.View>
            <GridView>
              <GridViewColumn Header="ディレクトリ" DisplayMemberBinding="{Binding RelativeDirectoryPath}" />
              <GridViewColumn>
                <GridViewColumn.Header>
                  <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0">ファイル名</TextBlock>
                    <TextBox Grid.Column="1" MinWidth="50" Text="{Binding EasyFileNameFilterPattern, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                  </Grid>
                </GridViewColumn.Header>
                <GridViewColumn.CellTemplate>
                  <DataTemplate>
                    <!-- 暫定。 背景色変えるとかそんなので対応したい -->
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <StackPanel Style="{StaticResource MatchFilePanel}">
                        <Border Style="{StaticResource MatchFile_Name}" IsEnabled="{Binding MatchedName, Mode=OneTime}" />
                        <Border Style="{StaticResource MatchFile_Size}" IsEnabled="{Binding MatchedSize, Mode=OneTime}" />
                        <Border Style="{StaticResource MatchFile_Property}" IsEnabled="{Binding MatchedProperty, Mode=OneTime}" />
                        <Border Style="{StaticResource MatchFile_Content}" IsEnabled="{Binding MatchedContent, Mode=OneTime}" />
                      </StackPanel>

                      <Image Grid.Row="0" Grid.RowSpan="4" Grid.Column="1" Width="16" Height="16" Source="{Binding FilePath, Converter={StaticResource FilePathToIconConverter}}">
                        <Image.Style>
                          <Style TargetType="Image" BasedOn="{StaticResource {x:Type Image}}">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsHiddenFile}" Value="True">
                                <Setter Property="Opacity" Value="0.6" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Image.Style>
                      </Image>

                      <app_main_view_control:TextSearchMatchControl
                        Grid.Row="0"
                        Grid.RowSpan="4"
                        Grid.Column="2"
                        IsSelectable="False"
                        Background="Transparent"
                        ShowSingleLine="True"
                        ShowSingleUnmatchText="{Binding FileName}"
                        ItemsSource="{Binding FileNameMatches}"
                      />
                    </Grid>
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
              <GridViewColumn DisplayMemberBinding="{Binding Extension}">
                <GridViewColumn.Header>
                  <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0">拡張子</TextBlock>
                    <ComboBox Grid.Column="1" MinWidth="40" IsEditable="True" Text="{Binding EasyExtensionFilterPattern, UpdateSourceTrigger=PropertyChanged, Delay=300}" ItemsSource="{Binding ExtensionItems}" />
                  </Grid>
                </GridViewColumn.Header>
              </GridViewColumn>

              <GridViewColumn Header="サイズ" DisplayMemberBinding="{Binding FileSize, Converter={StaticResource HumanLikeByteConverterSize}, Mode=OneWay}" />
              <GridViewColumn Header="単位" DisplayMemberBinding="{Binding FileSize, Converter={StaticResource HumanLikeByteConverterUnit}, Mode=OneWay}" />
            </GridView>
          </ListView.View>
          <ListView.ContextMenu>
            <ContextMenu>
              <ContextMenu.Resources>
                <Style TargetType="MenuItem">
                  <Setter Property="IsEnabled" Value="{Binding SelectedItem, Converter={StaticResource NotNullToBooleanConverter}}" />
                </Style>
              </ContextMenu.Resources>
              <MenuItem Header="ファイルを開く" Command="{Binding SelectedItem.OpenFileCommand}" />
              <MenuItem Header="親ディレクトリを開く" Command="{Binding SelectedItem.OpenDirectoryCommand}"/>
              <MenuItem Header="プロパティ" Command="{Binding SelectedItem.ShowPropertyCommand}" />
              <Separator />
              <MenuItem Header="ファイルをコピー"  Command="{Binding SelectedItem.CopyFileCommand}"/>
              <MenuItem Header="ファイル名をコピー"  Command="{Binding SelectedItem.CopyNameWithExtensionCommand}"/>
              <MenuItem Header="拡張子を外したファイル名をコピー"  Command="{Binding SelectedItem.CopyNameWithoutExtensionCommand}"/>
              <MenuItem Header="親ディレクトリをコピー"  Command="{Binding SelectedItem.CopyDirectoryCommand}"/>
            </ContextMenu>
          </ListView.ContextMenu>
        </ListView>

        <ContentControl Grid.Row="2" Visibility="{Binding ShowSelectedFileDetail, Converter={StaticResource BooleanToVisibilityConverter}}" >
          <ContentControl.Style>
            <Style TargetType="ContentControl">
              <Style.Triggers>
                <DataTrigger Binding="{Binding MultiSelectedItem.IsEnabled}" Value="True">
                  <Setter Property="Content">
                    <Setter.Value>
                      <app_main_view_finder:FinderMultiFileControl MultiItem="{Binding MultiSelectedItem}" />
                    </Setter.Value>
                  </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding MultiSelectedItem.IsEnabled}" Value="False">
                  <Setter Property="Content">
                    <Setter.Value>
                      <app_main_view_finder:FinderSingleFileControl SingleItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </Setter.Value>
                  </Setter>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </ContentControl.Style>
        </ContentControl>

        <GridSplitter Grid.Row="1" Style="{StaticResource DefaultHorizonGridSplitter}" Visibility="{Binding ShowSelectedFileDetail, Converter={StaticResource BooleanToVisibilityConverter}}" />

      </Grid>
    </Grid>

    <GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />

  </Grid>
</UserControl>
